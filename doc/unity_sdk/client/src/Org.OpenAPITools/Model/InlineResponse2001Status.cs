/* 
 * Augmented City API
 *
 * ## Description This is an API for the Augmented City platform ## Other resources For more information, please visit our website [https://www.augmented.city](https://www.augmented.city/) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vergendo.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// InlineResponse2001Status
    /// </summary>
    [DataContract]
    public partial class InlineResponse2001Status :  IEquatable<InlineResponse2001Status>, IValidatableObject
    {
        /// <summary>
        /// | State   | Code   |  Description  |   | - - | - - | - - |   | Success | 0 | Operation completed successfully |   | Fail | 1 | Operation failed, message field contains a description |   |  Server error | 2 | Some internal server error occurred  |  
        /// </summary>
        /// <value>| State   | Code   |  Description  |   | - - | - - | - - |   | Success | 0 | Operation completed successfully |   | Fail | 1 | Operation failed, message field contains a description |   |  Server error | 2 | Some internal server error occurred  |  </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CodeEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2

        }

        /// <summary>
        /// | State   | Code   |  Description  |   | - - | - - | - - |   | Success | 0 | Operation completed successfully |   | Fail | 1 | Operation failed, message field contains a description |   |  Server error | 2 | Some internal server error occurred  |  
        /// </summary>
        /// <value>| State   | Code   |  Description  |   | - - | - - | - - |   | Success | 0 | Operation completed successfully |   | Fail | 1 | Operation failed, message field contains a description |   |  Server error | 2 | Some internal server error occurred  |  </value>
        [DataMember(Name="code", EmitDefaultValue=false)]
        public CodeEnum Code { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse2001Status" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InlineResponse2001Status() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse2001Status" /> class.
        /// </summary>
        /// <param name="code">| State   | Code   |  Description  |   | - - | - - | - - |   | Success | 0 | Operation completed successfully |   | Fail | 1 | Operation failed, message field contains a description |   |  Server error | 2 | Some internal server error occurred  |   (required).</param>
        /// <param name="message">message.</param>
        public InlineResponse2001Status(CodeEnum code = default(CodeEnum), string message = default(string))
        {
            this.Code = code;
            this.Message = message;
        }
        
        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse2001Status {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse2001Status);
        }

        /// <summary>
        /// Returns true if InlineResponse2001Status instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse2001Status to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse2001Status input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Code == input.Code ||
                    this.Code.Equals(input.Code)
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
