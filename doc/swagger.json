{
  "tags": [
    {
      "name": "object",
      "description": "Operations with objects",
      "x-displayName": "Object operations"
    },
    {
      "name": "localization",
      "description": "Localization and scene acquisition",
      "x-displayName": "Localization and scene acquisition"
    },
    {
      "name": "series",
      "description": "Operations with series",
      "x-displayName": "Series operations"
    }
  ],
  "paths": {
    "/object": {
      "post": {
        "tags": [
          "object"
        ],
        "summary": "Add an object",
        "operationId": "addObject",
        "description": "Add a new user object into database",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/vnd.myplace.v1+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object processed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "objects_info": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "sticker",
                              "placeholder"
                            ],
                            "properties": {
                              "sticker": {
                                "type": "object",
                                "required": [
                                  "path",
                                  "sticker_text",
                                  "sticker_type"
                                ],
                                "properties": {
                                  "sticker_id": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "sticker_text": {
                                    "type": "string"
                                  },
                                  "sticker_type": {
                                    "type": "string"
                                  },
                                  "sticker_detailed_type": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": true
                              },
                              "placeholder": {
                                "type": "object",
                                "required": [
                                  "placeholder_id"
                                ],
                                "properties": {
                                  "placeholder_id": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1localizer~1prepare/get/responses/200/content/application~1json/schema"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1series/put/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1series/put/responses/500"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image",
                  "description"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "object",
                    "properties": {
                      "sticker": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "sticker_text": {
                            "type": "string"
                          }
                        }
                      },
                      "placeholder": {
                        "type": "object",
                        "properties": {
                          "projections": {
                            "type": "object",
                            "properties": {
                              "points": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "minItems": 2,
                                  "maxItems": 2,
                                  "items": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "filename": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get_objects": {
      "post": {
        "tags": [
          "localization"
        ],
        "summary": "Return objects",
        "operationId": "getObjects",
        "description": "Localize uploaded image and return objects info and scene",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/vnd.myplace.v1+json"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "sticker",
                "placeholder"
              ],
              "default": "sticker"
            },
            "description": "If not specified type is sticker"
          },
          {
            "name": "scene_format",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "render",
                "json_2d",
                "json_3d"
              ],
              "default": "none"
            },
            "description": "If not specified scene_format is none"
          }
        ],
        "responses": {
          "200": {
            "description": "Scene and objects info returned",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "objects_info"
                          ],
                          "properties": {
                            "objects_info": {
                              "$ref": "#/paths/~1object/post/responses/200/content/application~1json/schema/allOf/0/properties/objects_info"
                            },
                            "scene": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "objects_info",
                            "scene"
                          ],
                          "properties": {
                            "objects_info": {
                              "$ref": "#/paths/~1object/post/responses/200/content/application~1json/schema/allOf/0/properties/objects_info"
                            },
                            "scene": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "objects_info",
                            "scene"
                          ],
                          "properties": {
                            "objects_info": {
                              "$ref": "#/paths/~1object/post/responses/200/content/application~1json/schema/allOf/0/properties/objects_info"
                            },
                            "scene": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "node": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "distance",
                                      "points"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "distance": {
                                        "type": "string"
                                      },
                                      "points": {
                                        "$ref": "#/paths/~1object/post/requestBody/content/multipart~1form-data/schema/properties/description/properties/placeholder/properties/projections/properties/points"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "objects_info",
                            "scene"
                          ],
                          "properties": {
                            "objects_info": {
                              "$ref": "#/paths/~1object/post/responses/200/content/application~1json/schema/allOf/0/properties/objects_info"
                            },
                            "scene": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "node"
                                    ],
                                    "properties": {
                                      "node": {
                                        "$ref": "#/paths/~1localizer~1localize/post/responses/200/content/application~1json/schema/allOf/0/properties/scene/items/properties/node"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "camera"
                                    ],
                                    "properties": {
                                      "camera": {
                                        "$ref": "#/paths/~1localizer~1localize/post/responses/200/content/application~1json/schema/allOf/0/properties/camera"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$ref": "#/paths/~1localizer~1prepare/get/responses/200/content/application~1json/schema"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1series/put/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1series/put/responses/500"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "An image to make a query by"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/series": {
      "post": {
        "tags": [
          "series"
        ],
        "summary": "Add new series to server to make reconstruction",
        "operationId": "postSeries",
        "description": "Add new series to server to make reconstruction asynchronously. Accept series description and wait images upload",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/vnd.myplace.v2+json"
            }
          },
          {
            "name": "notification_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Firebase cloud message id. If specified the client will get push notification when series process is finished"
          }
        ],
        "responses": {
          "200": {
            "description": "Series task created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "task_id"
                  ],
                  "properties": {
                    "task_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1series/put/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1series/put/responses/500"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user",
                  "device",
                  "client",
                  "name",
                  "daytime",
                  "passages_count"
                ],
                "properties": {
                  "user": {
                    "type": "string",
                    "format": "email"
                  },
                  "device": {
                    "type": "string"
                  },
                  "client": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "daytime": {
                    "type": "string"
                  },
                  "passages_count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "description": "Files to add"
        }
      },
      "put": {
        "tags": [
          "series"
        ],
        "summary": "Upload series images to server",
        "operationId": "putSeries",
        "description": "Upload files to server at the series reconstruction. Send an empty request to notify a server that all images are uploaded. In that case the server will set files in a queue to be processed",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/vnd.myplace.v2+json"
            }
          },
          {
            "name": "task_id",
            "in": "query",
            "description": "uuid. Only one task_id could be specified",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files uploaded at the series",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "stage",
                        "task_id",
                        "images"
                      ],
                      "properties": {
                        "stage": {
                          "type": "string",
                          "enum": [
                            "UPLOAD"
                          ]
                        },
                        "task_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "stage",
                        "task_id"
                      ],
                      "properties": {
                        "stage": {
                          "type": "string",
                          "enum": [
                            "IN_QUEUE",
                            "IN_PROCESS"
                          ]
                        },
                        "task_id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "description": "Files to add"
        }
      },
      "get": {
        "tags": [
          "series"
        ],
        "summary": "Get series reconstruction status by task id",
        "operationId": "getSeries",
        "description": "Get series reconstruction status by task id",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/vnd.myplace.v2+json"
            }
          },
          {
            "name": "task_id",
            "required": true,
            "in": "query",
            "description": "uuid.\tSeveral task ids could be specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "stage",
                              "task_id"
                            ],
                            "properties": {
                              "stage": {
                                "type": "string",
                                "enum": [
                                  "DONE"
                                ]
                              },
                              "task_id": {
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          {
                            "$ref": "#/paths/~1localizer~1prepare/get/responses/200/content/application~1json/schema"
                          }
                        ]
                      },
                      {
                        "$ref": "#/paths/~1series/put/responses/200/content/application~1json/schema/oneOf/1"
                      },
                      {
                        "$ref": "#/paths/~1series/put/responses/200/content/application~1json/schema/oneOf/0"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1series/put/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1series/put/responses/500"
          }
        }
      }
    },
    "/localizer/localize": {
      "post": {
        "tags": [
          "localization"
        ],
        "summary": "Localize camera",
        "operationId": "localize",
        "description": "Localize uploaded image. Return camera pose and optional objects info and scene. Objects info and scene are sent on coordinate system change.",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/vnd.myplace.v2+json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Camera pose and optional objects info and scene",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "camera",
                        "scene_id",
                        "status"
                      ],
                      "properties": {
                        "camera": {
                          "type": "object",
                          "required": [
                            "position",
                            "orientation"
                          ],
                          "properties": {
                            "position": {
                              "type": "array",
                              "minItems": 3,
                              "maxItems": 3,
                              "items": {
                                "type": "number",
                                "format": "float"
                              }
                            },
                            "orientation": {
                              "type": "array",
                              "minItems": 4,
                              "maxItems": 4,
                              "items": {
                                "type": "number",
                                "format": "float"
                              }
                            }
                          }
                        },
                        "objects_info": {
                          "$ref": "#/paths/~1object/post/responses/200/content/application~1json/schema/allOf/0/properties/objects_info"
                        },
                        "scene_id": {
                          "type": "string"
                        },
                        "scene": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "node"
                            ],
                            "properties": {
                              "node": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "points"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "points": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "minItems": 3,
                                      "maxItems": 3,
                                      "items": {
                                        "type": "number",
                                        "format": "float"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1localizer~1prepare/get/responses/200/content/application~1json/schema"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1series/put/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1series/put/responses/500"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "description",
                  "image"
                ],
                "properties": {
                  "description": {
                    "type": "object",
                    "required": [
                      "gps"
                    ],
                    "properties": {
                      "gps": {
                        "type": "object",
                        "required": [
                          "latitude",
                          "longitude"
                        ],
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "format": "float"
                          },
                          "longitude": {
                            "type": "number",
                            "format": "float"
                          },
                          "altitude": {
                            "type": "number",
                            "format": "float"
                          },
                          "hdop": {
                            "type": "number",
                            "format": "float"
                          }
                        }
                      },
                      "focal_length_in_35mm_film": {
                        "type": "integer"
                      },
                      "mirrored": {
                        "type": "bool",
                        "default": false
                      },
                      "rotation": {
                        "type": "integer",
                        "enum": [
                          0,
                          90,
                          180,
                          270
                        ],
                        "default": 0,
                        "description": "Clockwise camera rotation"
                      }
                    }
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "A JPEG-encoded query image"
                  }
                }
              }
            },
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary",
                "description": "A JPEG-encoded query image, must include GPS data in EXIF tags"
              }
            }
          }
        }
      }
    },
    "/localizer/prepare": {
      "get": {
        "tags": [
          "localization"
        ],
        "summary": "Prepare localization session",
        "operationId": "prepare",
        "description": "Prepare for localization for given geolocation. Causes server to load nearby reconstructions for localization. Returns an error when localization in this location is not possible.",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string",
              "default": "application/vnd.myplace.v2+json"
            }
          },
          {
            "in": "query",
            "name": "lat",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "GPS latitude"
          },
          {
            "in": "query",
            "name": "lon",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "GPS longitude"
          },
          {
            "in": "query",
            "name": "alt",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "GPS altitude (optional)"
          },
          {
            "in": "query",
            "name": "dop",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "GPS HDOP (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "type": "integer",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "description": "| State   | Code   |  Description  |\n  | -- | -- | -- |\n  | Success | 0 | Operation completed successfully |\n  | Fail | 1 | Operation failed, message field contains a description |\n  |  Server error | 2 | Some internal server error occurred  |\n\n"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1series/put/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1series/put/responses/500"
          }
        }
      }
    }
  },
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "AC Server",
      "url": "http://developer.vergendo.com:5000/api",
      "variables": {
        "port": {
          "enum": [
            "5000"
          ],
          "default": "5000"
        },
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "info": {
    "description": "## Description\nThis is an API for the Augmented City platform\n## Other resources\nFor more information, please visit our website [https://www.augmented.city](https://www.augmented.city/)\n",
    "version": "1.0.0",
    "title": "Augmented City API",
    "contact": {
      "email": "support@vergendo.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://images.squarespace-cdn.com/content/5dc18d1bdf3c7b576d0cac36/1574164738499-ZCTSEOCMPZNPVTTNHZXF/augmentedcity-colorlogo.png?content-type=image%2Fpng",
      "altText": "AugmentedCity"
    }
  }
}